AI Poetry Generator

Project Overview

AI Poetry Generator is an innovative application designed to craft expressive, structured, and thematically rich poems based on user-defined themes, emotions, styles, and forms. Leveraging state-of-the-art generative AI models, this project explores the intersection of artificial intelligence and creative writing, pushing the boundaries of NLP to produce artistically impactful poetry that resonates with human emotion and literary structure.

Features

Customizable Themes: Generate poems tailored to specific themes like love, nature, adventure, and more.

Emotional Context: Capture emotions such as joy, nostalgia, melancholy, or excitement in each verse.

Stylistic Flexibility: Support for poetic forms like Sonnets, Haikus, Odes, and Free Verse.

Interactive UI: Built with Streamlit for real-time user interaction and seamless poetry generation.

Save & Share: Options to save and download your generated poems for future reference.

Prompt Customization: Users can experiment with different prompts to see how the AI adapts its poetic structure and language.

Technologies Used

Python: The primary language for backend development.

Transformers Library (HuggingFace): For leveraging pre-trained LLMs like GPT-2, GPT-3, and Mistral.

Streamlit: To build a user-friendly web-based application for easy interaction.

Jupyter Notebook / Google Colab: Used for experimentation, model testing, and prompt engineering.

Project Architecture

Frontend Interface: Streamlit is used to capture user inputs (themes, emotions, style, and form).

Backend Processing: HuggingFace Transformers generate poetry based on the structured prompts.

Model Deployment: Pre-trained models are loaded and optimized for poetic coherence and thematic depth.

Output Generation: Real-time display of AI-crafted poems that match user expectations and literary forms.

User Interaction: Allows real-time modification of inputs to experiment with poetic outputs.

Installation

To get started with the AI Poetry Generator, follow these steps:

# Clone the repository
git clone <repository-link>

# Navigate to the project directory
cd AI-Poetry-Generator

# Install the required libraries
pip install -r requirements.txt

Usage

To run the application locally:

# Execute the Streamlit app
streamlit run app.py

Open http://localhost:8501 in your browser to interact with the Poetry Generator.

Examples

Theme: Love, Emotion: Nostalgic, Style: Sonnet

Generates a classic Sonnet expressing nostalgic love.

Theme: Nature, Emotion: Peaceful, Style: Haiku

Crafts a Haiku reflecting tranquility and the beauty of nature.

Theme: Adventure, Emotion: Excited, Style: Free Verse

Produces a free-flowing verse that captures the spirit of exploration.

Future Enhancements

Fine-tuning Models: Training on poetry-specific datasets for richer thematic understanding.

Multi-Language Support: Expanding to generate poems in different languages.

Interactive Editing: Allow users to refine and adjust the generated poem directly.

Collaborative Poetry Generation: Real-time multi-user poetry collaboration.

Voice-to-Poem Integration: Allow users to speak their prompts and generate poetry.

Contributors

[Vaibhav Jindal] - Project Lead & Developer

Acknowledgements

HuggingFace for their robust Transformers library.

Streamlit for simplified and interactive UI integration.

OpenAI for advancing the capabilities of Generative AI.

Feel free to contribute to this project and make AI-powered poetry a beautifully accessible experience!

